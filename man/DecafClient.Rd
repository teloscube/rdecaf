% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/decaf_client.R
\name{DecafClient}
\alias{DecafClient}
\title{DECAF API Client}
\description{
Instances of this class can be used for conveniently issuing
HTTP requests to various APIs of remote DECAF Instances.

A DECAF Instance exposes its capabilities and the data it hosts over APIs
which can be then consumed by itself (to enhance its feature-set) or 3rd
parties (to integrate with 3rd party systems and/or data).

The API landscape of DECAF is large and constantly evolving. There are
multiple APIs for a given DECAF Instance:
\enumerate{
\item DECAF Barista
\item DECAF Estate
\item DECAF Functions
\item DECAF Beanbag
}

This class \code{DecafClient} is a convenience wrapper of clients for each of
these APIs.
}
\examples{

## ------------------------------------------------
## Method `DecafClient$new`
## ------------------------------------------------

client <- rdecaf::DecafClient$new(
    url = "https://httpbin.org",
    credentials = list(username = "hebele", password = "hubele")
)
client <- rdecaf::DecafClient$new(
    url = "https://httpbin.org",
    credentials = list(apikey = "hebele", apisecret = "hubele")
)
client <- rdecaf::DecafClient$new(
    url = "https://httpbin.org",
    credentials = list(token = "zamazingo")
)
client <- rdecaf::DecafClient$new(
    url = "https://httpbin.org",
    credentials = list(header = "Token zamazingo")
)
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{url}}{Base URL of the remote DECAF Instance.}

\item{\code{bare}}{Bare HTTP client for the remote DECAF Instance.

This is a \code{crul::HttpClient} instance that is ready to issue requests
to remote DECAF Instance. Indeed, this instance is sufficient for any
kind of API communication with remote DECAF Instance.

The API namespace is not provided. Therefore, the call-site needs to
pass the absolute URL path (such as \verb{/api/version/}) when using this
bare HTTP client.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{DecafClient$new()}}
\item \href{#method-info}{\code{DecafClient$info()}}
\item \href{#method-print}{\code{DecafClient$print()}}
\item \href{#method-clone}{\code{DecafClient$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Creates a DECAF client.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DecafClient$new(url, credentials)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{url}}{Base URL of the remote DECAF instance.}

\item{\code{credentials}}{Authentication credentials for the remote DECAF
instance.

This should be a named-list of credentials. Key-value pairs of this
list depends on the authentication method. Keys should be one of:
\enumerate{
\item \code{username} and \code{password} for "Basic Authentication" method.
\item \code{apikey} and \code{apisecret} for "API Key Authentication" method.
\item \code{token} for "API Token Authentication" method.
\item \code{header} for passing \code{Authorization} HTTP header as is.
}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{DecafClient} object.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{client <- rdecaf::DecafClient$new(
    url = "https://httpbin.org",
    credentials = list(username = "hebele", password = "hubele")
)
client <- rdecaf::DecafClient$new(
    url = "https://httpbin.org",
    credentials = list(apikey = "hebele", apisecret = "hubele")
)
client <- rdecaf::DecafClient$new(
    url = "https://httpbin.org",
    credentials = list(token = "zamazingo")
)
client <- rdecaf::DecafClient$new(
    url = "https://httpbin.org",
    credentials = list(header = "Token zamazingo")
)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-info"></a>}}
\if{latex}{\out{\hypertarget{method-info}{}}}
\subsection{Method \code{info()}}{
Prints rudimentary information about the DECAF Instance.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DecafClient$info()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
Provides the print function for \code{DecafClient} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DecafClient$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DecafClient$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
